<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="claimsHandling" resourceRoot="" soapui-version="3.5-beta1" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ClaimApprovalReminderBinding" type="wsdl" bindingName="{http://www.insurance.example.com/claims}ClaimApprovalReminderBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/hise/ClaimsHandlingService/?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://localhost:8090</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="notify" bindingOperationName="notify" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8090</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cla="http://www.insurance.example.com/claims">
   <soapenv:Header/>
   <soapenv:Body>
      <cla:notify>
         <firstname>?</firstname>
         <lastname>?</lastname>
         <taskId>?</taskId>
      </cla:notify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.insurance.example.com/claims/ClaimApprovalReminderPT/notifyRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ClaimsHandlingBinding" type="wsdl" bindingName="{http://www.insurance.example.com/claims}ClaimsHandlingBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/hise/ClaimsHandlingService/?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/hise/ClaimsHandlingService/?wsdl"><con:part><con:url>http://localhost:8080/hise/ClaimsHandlingService/?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="ClaimApproval" targetNamespace="http://www.insurance.example.com/claims" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://www.insurance.example.com/claims" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xsd:schema elementFormDefault="qualified" targetNamespace="http://www.insurance.example.com/claims">
      <xsd:complexType name="ClaimApprovalData">
        <xsd:sequence>
          <xsd:element name="cust">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="id" type="xsd:string"></xsd:element>
                <xsd:element name="firstname" type="xsd:string"></xsd:element>
                <xsd:element name="lastname" type="xsd:string"></xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="amount" type="xsd:double"/>
          <xsd:element name="region" type="xsd:string"/>
          <xsd:element name="prio" type="xsd:int"/>
          <xsd:element name="activateAt" type="xsd:dateTime"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ClaimApprovalResponse"></wsdl:message>
  <wsdl:message name="notifyResponse"></wsdl:message>
  <wsdl:message name="ClaimResolveRequest">
    <wsdl:part name="claimId" type="xsd:int"></wsdl:part>
    <wsdl:part name="ok" type="xsd:boolean"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ClaimResolveResponse"></wsdl:message>
  <wsdl:message name="ClaimApprovalRequest">
    <wsdl:part name="ClaimApprovalRequest" type="tns:ClaimApprovalData"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="notifyRequest">
    <wsdl:part name="firstname" type="xsd:string"></wsdl:part>
    <wsdl:part name="lastname" type="xsd:string"></wsdl:part>
    <wsdl:part name="taskId" type="xsd:string"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ClaimApprovalReminderPT">
    <wsdl:operation name="notify">
      <wsdl:input message="tns:notifyRequest"></wsdl:input>
      <wsdl:output message="tns:notifyResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="ClaimsHandlingPT">
    <wsdl:operation name="approve">
      <wsdl:input message="tns:ClaimApprovalRequest"></wsdl:input>
      <wsdl:output message="tns:ClaimApprovalResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="escalate">
      <wsdl:input message="tns:ClaimApprovalRequest"></wsdl:input>
      <wsdl:output message="tns:ClaimApprovalResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="resolve">
      <wsdl:input message="tns:ClaimResolveRequest"></wsdl:input>
      <wsdl:output message="tns:ClaimResolveResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ClaimsHandlingBinding" type="tns:ClaimsHandlingPT">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="approve">
      <soap:operation/>
      <wsdl:input>
        <soap:body namespace="http://www.insurance.example.com/claims" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body namespace="http://www.insurance.example.com/claims" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="escalate">
      <soap:operation/>
      <wsdl:input>
        <soap:body namespace="http://www.insurance.example.com/claims" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body namespace="http://www.insurance.example.com/claims" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="resolve">
      <soap:operation/>
      <wsdl:input>
        <soap:body namespace="http://www.insurance.example.com/claims" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body namespace="http://www.insurance.example.com/claims" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ClaimApprovalReminderBinding" type="tns:ClaimApprovalReminderPT">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="notify">
      <soap:operation/>
      <wsdl:input>
        <soap:body namespace="http://www.insurance.example.com/claims" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body namespace="http://www.insurance.example.com/claims" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ClaimApprovalReminderService">
    <wsdl:port binding="tns:ClaimApprovalReminderBinding" name="ClaimApprovalReminderPort">
      <soap:address location="http://localhost:8090"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="ClaimsHandlingService">
    <wsdl:port binding="tns:ClaimsHandlingBinding" name="ClaimsHandlingPort">
      <soap:address location="http://localhost:8080/hise/ClaimsHandlingService/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/hise/ClaimsHandlingService/</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="approve" bindingOperationName="approve" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/ClaimsHandlingService/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cla="http://www.insurance.example.com/claims">
   <soapenv:Header/>
   <soapenv:Body>
      <cla:approve>
         <ClaimApprovalRequest>
            <cla:cust>
               <cla:id>123</cla:id>
               <cla:firstname>John</cla:firstname>
               <cla:lastname>Rambo</cla:lastname>
            </cla:cust>
            <cla:amount>123</cla:amount>
            <cla:region>US</cla:region>
            <cla:prio>1</cla:prio>
            <cla:activateAt></cla:activateAt>
         </ClaimApprovalRequest>
      </cla:approve>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>user1</con:username><con:password>pass1</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.insurance.example.com/claims/ClaimsHandlingPT/approveRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="escalate" bindingOperationName="escalate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/ClaimsHandlingService/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cla="http://www.insurance.example.com/claims">
   <soapenv:Header/>
   <soapenv:Body>
      <cla:escalate>
         <ClaimApprovalRequest>
            <cla:cust>
               <cla:id>?</cla:id>
               <cla:firstname>?</cla:firstname>
               <cla:lastname>?</cla:lastname>
            </cla:cust>
            <cla:amount>?</cla:amount>
            <cla:region>?</cla:region>
            <cla:prio>?</cla:prio>
            <cla:activateAt>?</cla:activateAt>
         </ClaimApprovalRequest>
      </cla:escalate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.insurance.example.com/claims/ClaimsHandlingPT/escalateRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="resolve" bindingOperationName="resolve" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/ClaimsHandlingService/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cla="http://www.insurance.example.com/claims">
   <soapenv:Header/>
   <soapenv:Body>
      <cla:resolve>
         <claimId>?</claimId>
         <ok>?</ok>
      </cla:resolve>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.insurance.example.com/claims/ClaimsHandlingPT/resolveRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="taskOperationsSOAP" type="wsdl" bindingName="{http://www.example.org/WS-HT/api/wsdl}taskOperationsSOAP" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/hise/taskOperations/?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/hise/taskOperations/?wsdl"><con:part><con:url>http://localhost:8080/hise/taskOperations/?wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.example.org/WS-HT/api/wsdl" xmlns="http://www.example.org/WS-HT/api/wsdl" xmlns:htd="http://www.example.org/WS-HT" xmlns:htda="http://www.example.org/WS-HT/api" xmlns:htdt="http://www.example.org/WS-HT/api/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xsd:schema>
      <xsd:import namespace="http://www.example.org/WS-HT" schemaLocation="http://localhost:8080/hise/taskOperations/?xsd=ws-humantask.xsd"/>
      <xsd:import namespace="http://www.example.org/WS-HT/api" schemaLocation="http://localhost:8080/hise/taskOperations/?xsd=ws-humantask-api.xsd"/>
      <xsd:import namespace="http://www.example.org/WS-HT/api/xsd" schemaLocation="http://localhost:8080/hise/taskOperations/?xsd=ws-humantask-api-wsdl.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="setOutput">
    <wsdl:part element="htdt:setOutput" name="setOutput"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getComments">
    <wsdl:part element="htdt:getComments" name="getComments"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteAttachments">
    <wsdl:part element="htdt:deleteAttachments" name="deleteAttachments"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteAttachmentsResponse">
    <wsdl:part element="htdt:deleteAttachmentsResponse" name="deleteAttachmentsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="illegalAccessFault">
    <wsdl:part element="htdt:illegalAccess" name="illegalAccess"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setOutputResponse">
    <wsdl:part element="htdt:setOutputResponse" name="setOutputResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="forwardResponse">
    <wsdl:part element="htdt:forwardResponse" name="forwardResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="nominateResponse">
    <wsdl:part element="htdt:nominateResponse" name="nominateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addComment">
    <wsdl:part element="htdt:addComment" name="addComment"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMyTasksResponse">
    <wsdl:part element="htdt:getMyTasksResponse" name="getMyTasksResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMyTaskAbstractsResponse">
    <wsdl:part element="htdt:getMyTaskAbstractsResponse" name="getMyTaskAbstractsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="releaseResponse">
    <wsdl:part element="htdt:releaseResponse" name="releaseResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRenderingTypes">
    <wsdl:part element="htdt:getRenderingTypes" name="getRenderingTypes"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTaskInfo">
    <wsdl:part element="htdt:getTaskInfo" name="getTaskInfo"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAttachmentInfosResponse">
    <wsdl:part element="htdt:getAttachmentInfosResponse" name="getAttachmentInfosResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteFaultResponse">
    <wsdl:part element="htdt:deleteFaultResponse" name="deleteFaultResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAttachmentsResponse">
    <wsdl:part element="htdt:getAttachmentsResponse" name="getAttachmentsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTaskInfoResponse">
    <wsdl:part element="htdt:getTaskInfoResponse" name="getTaskInfoResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTaskDescription">
    <wsdl:part element="htdt:getTaskDescription" name="getTaskDescription"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeResponse">
    <wsdl:part element="htdt:removeResponse" name="removeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOutputResponse">
    <wsdl:part element="htdt:getOutputResponse" name="getOutputResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRenderingResponse">
    <wsdl:part element="htdt:getRenderingResponse" name="getRenderingResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addAttachment">
    <wsdl:part element="htdt:addAttachment" name="addAttachment"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="start">
    <wsdl:part element="htdt:start" name="start"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="illegalOperationFault">
    <wsdl:part element="htdt:illegalOperation" name="illegalOperation"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCommentsResponse">
    <wsdl:part element="htdt:getCommentsResposne" name="getCommentsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMyTaskAbstracts">
    <wsdl:part element="htdt:getMyTaskAbstracts" name="getMyTaskAbstracts"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteOutputResponse">
    <wsdl:part element="htdt:deleteOutputResponse" name="deleteOutputResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="startResponse">
    <wsdl:part element="htdt:startResponse" name="startResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addCommentResponse">
    <wsdl:part element="htdt:addCommentResponse" name="addCommentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMyTasks">
    <wsdl:part element="htdt:getMyTasks" name="getMyTasks"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setFaultResponse">
    <wsdl:part element="htdt:setFaultResponse" name="setFaultResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="completeResponse">
    <wsdl:part element="htdt:completeResponse" name="completeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteOutput">
    <wsdl:part element="htdt:deleteOutput" name="deleteOutput"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="illegalArgumentFault">
    <wsdl:part element="htdt:illegalArgument" name="illegalArgument"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTaskDescriptionResponse">
    <wsdl:part element="htdt:getTaskDescriptionResponse" name="getTaskDescriptionResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFault">
    <wsdl:part element="htdt:getFault" name="getFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOutput">
    <wsdl:part element="htdt:getOutput" name="getOutput"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="skipResponse">
    <wsdl:part element="htdt:skipResponse" name="skipResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setPriorityResponse">
    <wsdl:part element="htdt:setPriorityResponse" name="setPriorityResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="forward">
    <wsdl:part element="htdt:forward" name="forward"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setPriority">
    <wsdl:part element="htdt:setPriority" name="setPriority"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="suspendUntil">
    <wsdl:part element="htdt:suspendUntil" name="suspendUntil"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="delegate">
    <wsdl:part element="htdt:delegate" name="delegate"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="query">
    <wsdl:part element="htdt:query" name="query"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRendering">
    <wsdl:part element="htdt:getRendering" name="getRendering"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="resumeResponse">
    <wsdl:part element="htdt:resumeResponse" name="resumeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="skip">
    <wsdl:part element="htdt:skip" name="skip"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setGenericHumanRole">
    <wsdl:part element="htdt:setGenericHumanRole" name="setGenericHumanRole"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getInputResponse">
    <wsdl:part element="htdt:getInputResponse" name="getInputResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fail">
    <wsdl:part element="htdt:fail" name="fail"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="suspendUntilResponse">
    <wsdl:part element="htdt:suspendUntilResponse" name="suspendUntilResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="suspend">
    <wsdl:part element="htdt:suspend" name="suspend"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="resume">
    <wsdl:part element="htdt:resume" name="resume"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="delegateResponse">
    <wsdl:part element="htdt:delegateResponse" name="delegateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setGenericHumanRoleResponse">
    <wsdl:part element="htdt:setGenericHumanRoleResponse" name="setGenericHumanRoleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="claim">
    <wsdl:part element="htdt:claim" name="claim"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addAttachmentResponse">
    <wsdl:part element="htdt:addAttachmentResponse" name="addAttachmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setFault">
    <wsdl:part element="htdt:setFault" name="setFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="recipientNotAllowed">
    <wsdl:part element="htdt:recipientNotAllowed" name="recipientNotAllowed"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="complete">
    <wsdl:part element="htdt:complete" name="complete"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAttachments">
    <wsdl:part element="htdt:getAttachments" name="getAttachments"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="activateResponse">
    <wsdl:part element="htdt:activateResponse" name="activateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="release">
    <wsdl:part element="htdt:release" name="release"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="stop">
    <wsdl:part element="htdt:stop" name="stop"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAttachmentInfos">
    <wsdl:part element="htdt:getAttachmentInfos" name="getAttachmentInfos"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getInput">
    <wsdl:part element="htdt:getInput" name="getInput"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="activate">
    <wsdl:part element="htdt:activate" name="activate"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="claimResponse">
    <wsdl:part element="htdt:claimResponse" name="claimResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="suspendResponse">
    <wsdl:part element="htdt:suspendResponse" name="suspendResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="failResponse">
    <wsdl:part element="htdt:failResponse" name="failResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteFault">
    <wsdl:part element="htdt:deleteFault" name="deleteFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="queryResponse">
    <wsdl:part element="htdt:queryResponse" name="queryResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="remove">
    <wsdl:part element="htdt:remove" name="remove"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="stopResponse">
    <wsdl:part element="htdt:stopResponse" name="stopResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="nominate">
    <wsdl:part element="htdt:nominate" name="nominate"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="illegalStateFault">
    <wsdl:part element="htdt:illegalState" name="illegalState"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRenderingTypesResponse">
    <wsdl:part element="htdt:getRenderingTypesResponse" name="getRenderingTypesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFaultResponse">
    <wsdl:part element="htdt:getFaultResponse" name="getFaultResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="taskOperations">
    <wsdl:operation name="claim">
      <wsdl:input message="claim"></wsdl:input>
      <wsdl:output message="claimResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="start">
      <wsdl:input message="start"></wsdl:input>
      <wsdl:output message="startResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stop">
      <wsdl:input message="stop"></wsdl:input>
      <wsdl:output message="stopResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="release">
      <wsdl:input message="release"></wsdl:input>
      <wsdl:output message="releaseResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="suspend">
      <wsdl:input message="suspend"></wsdl:input>
      <wsdl:output message="suspendResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="suspendUntil">
      <wsdl:input message="suspendUntil"></wsdl:input>
      <wsdl:output message="suspendUntilResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resume">
      <wsdl:input message="resume"></wsdl:input>
      <wsdl:output message="resumeResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="complete">
      <wsdl:input message="complete"></wsdl:input>
      <wsdl:output message="completeResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="remove">
      <wsdl:input message="remove"></wsdl:input>
      <wsdl:output message="removeResponse"></wsdl:output>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fail">
      <wsdl:input message="fail"></wsdl:input>
      <wsdl:output message="failResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalOperationFault" name="illegalOperationFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setPriority">
      <wsdl:input message="setPriority"></wsdl:input>
      <wsdl:output message="setPriorityResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addAttachment">
      <wsdl:input message="addAttachment"></wsdl:input>
      <wsdl:output message="addAttachmentResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttachmentInfos">
      <wsdl:input message="getAttachmentInfos"></wsdl:input>
      <wsdl:output message="getAttachmentInfosResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttachments">
      <wsdl:input message="getAttachments"></wsdl:input>
      <wsdl:output message="getAttachmentsResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteAttachments">
      <wsdl:input message="deleteAttachments"></wsdl:input>
      <wsdl:output message="deleteAttachmentsResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addComment">
      <wsdl:input message="addComment"></wsdl:input>
      <wsdl:output message="addCommentResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getComments">
      <wsdl:input message="getComments"></wsdl:input>
      <wsdl:output message="getCommentsResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="skip">
      <wsdl:input message="skip"></wsdl:input>
      <wsdl:output message="skipResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalOperationFault" name="illegalOperationFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="forward">
      <wsdl:input message="forward"></wsdl:input>
      <wsdl:output message="forwardResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delegate">
      <wsdl:input message="delegate"></wsdl:input>
      <wsdl:output message="delegateResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="recipientNotAllowed" name="recipientNotAllowed"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRendering">
      <wsdl:input message="getRendering"></wsdl:input>
      <wsdl:output message="getRenderingResponse"></wsdl:output>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRenderingTypes">
      <wsdl:input message="getRenderingTypes"></wsdl:input>
      <wsdl:output message="getRenderingTypesResponse"></wsdl:output>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTaskInfo">
      <wsdl:input message="getTaskInfo"></wsdl:input>
      <wsdl:output message="getTaskInfoResponse"></wsdl:output>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTaskDescription">
      <wsdl:input message="getTaskDescription"></wsdl:input>
      <wsdl:output message="getTaskDescriptionResponse"></wsdl:output>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setOutput">
      <wsdl:input message="setOutput"></wsdl:input>
      <wsdl:output message="setOutputResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteOutput">
      <wsdl:input message="deleteOutput"></wsdl:input>
      <wsdl:output message="deleteOutputResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setFault">
      <wsdl:input message="setFault"></wsdl:input>
      <wsdl:output message="setFaultResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalOperationFault" name="illegalOperationFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteFault">
      <wsdl:input message="deleteFault"></wsdl:input>
      <wsdl:output message="deleteFaultResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInput">
      <wsdl:input message="getInput"></wsdl:input>
      <wsdl:output message="getInputResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOutput">
      <wsdl:input message="getOutput"></wsdl:input>
      <wsdl:output message="getOutputResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getFault">
      <wsdl:input message="getFault"></wsdl:input>
      <wsdl:output message="getFaultResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalOperationFault" name="illegalOperationFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMyTaskAbstracts">
      <wsdl:input message="getMyTaskAbstracts"></wsdl:input>
      <wsdl:output message="getMyTaskAbstractsResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMyTasks">
      <wsdl:input message="getMyTasks"></wsdl:input>
      <wsdl:output message="getMyTasksResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="query">
      <wsdl:input message="query"></wsdl:input>
      <wsdl:output message="queryResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activate">
      <wsdl:input message="activate"></wsdl:input>
      <wsdl:output message="activateResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="nominate">
      <wsdl:input message="nominate"></wsdl:input>
      <wsdl:output message="nominateResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setGenericHumanRole">
      <wsdl:input message="setGenericHumanRole"></wsdl:input>
      <wsdl:output message="setGenericHumanRoleResponse"></wsdl:output>
      <wsdl:fault message="illegalStateFault" name="illegalStateFault"></wsdl:fault>
      <wsdl:fault message="illegalAccessFault" name="illegalAccessFault"></wsdl:fault>
      <wsdl:fault message="illegalArgumentFault" name="illegalArgumentFault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="taskOperationsSOAP" type="taskOperations">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="claim">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/claim"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="start">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/start"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stop">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/stop"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="release">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/release"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="suspend">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/suspend"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="suspendUntil">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/suspendUntil"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resume">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/resume"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="complete">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/complete"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="remove">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/remove"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fail">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/fail"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalOperationFault">
        <soap:fault name="illegalOperationFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setPriority">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/setPriority"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addAttachment">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/addAttachment"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttachmentInfos">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/getAttachmentInfos"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttachments">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/getAttachments"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteAttachments">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/deleteAttachments"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addComment">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/addComment"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getComments">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/getComments"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="skip">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/skip"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalOperationFault">
        <soap:fault name="illegalOperationFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="forward">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/forward"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delegate">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/delegate"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="recipientNotAllowed">
        <soap:fault name="recipientNotAllowed" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRendering">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/getRendering"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRenderingTypes">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/getRenderingTypes"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTaskInfo">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/getTaskInfo"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTaskDescription">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/getTaskDescription"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setOutput">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/setOutput"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteOutput">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/deleteOutput"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setFault">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/setFault"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalOperationFault">
        <soap:fault name="illegalOperationFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteFault">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/deleteFault"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInput">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/getInput"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOutput">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/getOutput"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getFault">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/getFault"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalOperationFault">
        <soap:fault name="illegalOperationFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMyTaskAbstracts">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/getMyTaskAbstracts"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMyTasks">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/getMyTasks"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="query">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/query"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activate">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/activate"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="nominate">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/nominate"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setGenericHumanRole">
      <soap:operation soapAction="http://www.example.org/WS-HT/api/wsdl/setGenericHumanRole"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="illegalStateFault">
        <soap:fault name="illegalStateFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalAccessFault">
        <soap:fault name="illegalAccessFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="illegalArgumentFault">
        <soap:fault name="illegalArgumentFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="taskOperations">
    <wsdl:port binding="taskOperationsSOAP" name="taskOperationsSOAP">
      <soap:address location="http://localhost:8080/hise/taskOperations/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/hise/taskOperations/?xsd=ws-humantask.xsd</con:url><con:content><![CDATA[<!--https://www.sdn.sap.com/irj/sdn/go/portal/prtroot/docs/library/uuid/a0c9ce4c-ee02-2a10-4b96-cb205464aa02

© 2007 Active Endpoints Inc., Adobe Systems Inc., BEA Systems Inc., International
Business Machines Corporation, Oracle Inc., and SAP AG. All rights reserved.-->
<xsd:schema blockDefault="#all" elementFormDefault="qualified" targetNamespace="http://www.example.org/WS-HT" xmlns="http://www.example.org/WS-HT" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--xsd:import namespace="http://www.w3.org/XML/1998/namespace"
    schemaLocation="http://www.w3.org/2001/xml.xsd" /-->
  <xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://localhost:8080/hise/taskOperations/?xsd=xml.xsd"/>
  <!--base types for extensible elements-->
  <xsd:complexType name="tExtensibleElements">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="documentation" type="tDocumentation"/>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType mixed="true" name="tDocumentation">
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute ref="xml:lang"/>
  </xsd:complexType>
  <xsd:complexType mixed="true" name="tExtensibleMixedContentElements">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="documentation" type="tDocumentation"/>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <!--human task definition-->
  <xsd:element name="humanInteractions" type="tHumanInteractions"/>
  <xsd:complexType name="tHumanInteractions">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="extensions" type="tExtensions"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="import" type="tImport"/>
          <xsd:element minOccurs="0" ref="logicalPeopleGroups"/>
          <xsd:element minOccurs="0" ref="tasks"/>
          <xsd:element minOccurs="0" ref="notifications"/>
        </xsd:sequence>
        <xsd:attribute name="targetNamespace" type="xsd:anyURI" use="required"/>
        <xsd:attribute name="queryLanguage" type="xsd:anyURI"/>
        <xsd:attribute name="expressionLanguage" type="xsd:anyURI"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="tExtensions">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" name="extension" type="tExtension"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="tExtension">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
        <xsd:attribute name="mustUnderstand" type="tBoolean" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="import" type="tImport"/>
  <xsd:complexType name="tImport">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:attribute name="namespace" type="xsd:anyURI" use="optional"/>
        <xsd:attribute name="location" type="xsd:anyURI" use="optional"/>
        <xsd:attribute name="importType" type="xsd:anyURI" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="logicalPeopleGroups" type="tLogicalPeopleGroups"/>
  <xsd:complexType name="tLogicalPeopleGroups">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" name="logicalPeopleGroup" type="tLogicalPeopleGroup"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="tLogicalPeopleGroup">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="parameter" type="tParameter"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:NCName" use="required"/>
        <xsd:attribute name="reference" type="xsd:NCName" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--generic human roles used in tasks and notifications-->
  <xsd:group name="genericHumanRole">
    <xsd:choice>
      <xsd:element ref="potentialOwners"/>
      <xsd:element ref="excludedOwners"/>
      <xsd:element ref="taskInitiator"/>
      <xsd:element ref="taskStakeholders"/>
      <xsd:element ref="businessAdministrators"/>
      <xsd:element ref="recipients"/>
    </xsd:choice>
  </xsd:group>
  <xsd:element name="potentialOwners" type="tGenericHumanRole"/>
  <xsd:element name="excludedOwners" type="tGenericHumanRole"/>
  <xsd:element name="taskInitiator" type="tGenericHumanRole"/>
  <xsd:element name="taskStakeholders" type="tGenericHumanRole"/>
  <xsd:element name="businessAdministrators" type="tGenericHumanRole"/>
  <xsd:element name="recipients" type="tGenericHumanRole"/>
  <xsd:complexType name="tGenericHumanRole">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:sequence>
          <xsd:element name="from" type="tFrom"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--elements and types for organizational entities-->
  <xsd:element name="organizationalEntity" type="tOrganizationalEntity"/>
  <xsd:complexType name="tOrganizationalEntity">
    <xsd:choice>
      <xsd:element ref="users"/>
      <xsd:element ref="groups"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:element name="user" type="tUser"/>
  <xsd:simpleType name="tUser">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:element name="users" type="tUserlist"/>
  <xsd:complexType name="tUserlist">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="user"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="group" type="tGroup"/>
  <xsd:simpleType name="tGroup">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:element name="groups" type="tGrouplist"/>
  <xsd:complexType name="tGrouplist">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="group"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--human tasks-->
  <xsd:element name="tasks" type="tTasks"/>
  <xsd:complexType name="tTasks">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" ref="task"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="task" type="tTask"/>
  <xsd:complexType name="tTask">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:sequence>
          <xsd:element name="interface" type="tTaskInterface"/>
          <xsd:element minOccurs="0" ref="priority"/>
          <xsd:element ref="peopleAssignments"/>
          <xsd:element minOccurs="0" name="delegation" type="tDelegation"/>
          <xsd:element name="presentationElements" type="tPresentationElements"/>
          <xsd:element minOccurs="0" name="outcome" type="tQuery"/>
          <xsd:element minOccurs="0" name="searchBy" type="tExpression"/>
          <xsd:element minOccurs="0" name="renderings" type="tRenderings"/>
          <xsd:element minOccurs="0" name="deadlines" type="tDeadlines"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:NCName" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="priority" type="tPriority"/>
  <xsd:complexType name="tTaskInterface">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:attribute name="portType" type="xsd:QName" use="required"/>
        <xsd:attribute name="operation" type="xsd:NCName" use="required"/>
        <xsd:attribute name="responsePortType" type="xsd:QName" use="optional"/>
        <xsd:attribute name="responseOperation" type="xsd:NCName" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--presentation elements-->
  <xsd:complexType name="tPresentationElements">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="name" type="tText"/>
          <xsd:element minOccurs="0" name="presentationParameters" type="tPresentationParameters"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="subject" type="tText"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="description" type="tDescription"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="tPresentationParameters">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" name="presentationParameter" type="tPresentationParameter"/>
        </xsd:sequence>
        <xsd:attribute name="expressionLanguage" type="xsd:anyURI"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="tPresentationParameter">
    <xsd:complexContent>
      <xsd:extension base="tParameter"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="tRenderings">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" name="rendering" type="tRendering"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--elements for rendering tasks-->
  <xsd:complexType name="tRendering">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:attribute name="type" type="xsd:QName" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--elements for people assignment-->
  <xsd:element name="peopleAssignments" type="tPeopleAssignments"/>
  <xsd:complexType name="tPeopleAssignments">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:sequence>
          <xsd:group maxOccurs="unbounded" minOccurs="0" ref="genericHumanRole"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--elements for handling timeouts and escalation-->
  <xsd:complexType name="tDeadlines">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="startDeadline" type="tDeadline"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="completionDeadline" type="tDeadline"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="tDeadline">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="for" type="tDuration-expr"/>
            <xsd:element name="until" type="tDeadline-expr"/>
          </xsd:choice>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="escalation" type="tEscalation"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="tEscalation">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="condition" type="tBoolean-expr"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="toParts" type="tToParts"/>
          <xsd:choice>
            <xsd:element ref="notification"/>
            <xsd:element name="localNotification" type="tLocalNotification"/>
            <xsd:element name="reassignment" type="tReassignment"/>
          </xsd:choice>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:NCName" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="tLocalNotification">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:choice>
          <xsd:sequence>
            <xsd:element minOccurs="0" ref="priority"/>
            <xsd:element minOccurs="0" ref="peopleAssignments"/>
          </xsd:sequence>
        </xsd:choice>
        <xsd:attribute name="reference" type="xsd:QName" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="tReassignment">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:sequence>
          <xsd:element ref="potentialOwners"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="tToParts">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" name="toPart" type="tToPart"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType mixed="true" name="tToPart">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleMixedContentElements">
        <xsd:attribute name="name" type="xsd:NCName" use="required"/>
        <xsd:attribute name="expressionLanguage" type="xsd:anyURI"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--task delegation-->
  <xsd:complexType name="tDelegation">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="from" type="tFrom"/>
        </xsd:sequence>
        <xsd:attribute name="potentialDelegatees" type="tPotentialDelegatees" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="tPotentialDelegatees">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="anybody"/>
      <xsd:enumeration value="nobody"/>
      <xsd:enumeration value="potentialOwners"/>
      <xsd:enumeration value="other"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--notifications-->
  <xsd:element name="notifications" type="tNotifications"/>
  <xsd:complexType name="tNotifications">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" ref="notification"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="notification" type="tNotification"/>
  <xsd:complexType name="tNotification">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:sequence>
          <xsd:element name="interface" type="tNotificationInterface"/>
          <xsd:element minOccurs="0" ref="priority"/>
          <xsd:element ref="peopleAssignments"/>
          <xsd:element name="presentationElements" type="tPresentationElements"/>
          <xsd:element minOccurs="0" name="renderings" type="tRenderings"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:NCName" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="tNotificationInterface">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleElements">
        <xsd:attribute name="portType" type="xsd:QName" use="required"/>
        <xsd:attribute name="operation" type="xsd:NCName" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--miscellaneous helper types-->
  <xsd:complexType mixed="true" name="tText">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleMixedContentElements">
        <xsd:attribute ref="xml:lang"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType mixed="true" name="tDescription">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleMixedContentElements">
        <xsd:attribute ref="xml:lang"/>
        <xsd:attribute name="contentType" type="xsd:string"/>
        <!--any MIME type is allowed as value of contentType-->
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType mixed="true" name="tFrom">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleMixedContentElements">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element minOccurs="0" name="argument" type="tArgument"/>
            <xsd:element minOccurs="0" name="literal" type="tLiteral"/>
          </xsd:choice>
        </xsd:sequence>
        <xsd:attribute name="expressionLanguage" type="xsd:anyURI"/>
        <xsd:attribute name="logicalPeopleGroup" type="xsd:QName"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="tArgument">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleMixedContentElements">
        <xsd:attribute name="name" type="xsd:NCName"/>
        <xsd:attribute name="expressionLanguage" type="xsd:anyURI"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType mixed="true" name="tParameter">
    <xsd:complexContent>
      <xsd:extension base="tExtensibleMixedContentElements">
        <xsd:attribute name="name" type="xsd:NCName" use="required"/>
        <xsd:attribute name="type" type="xsd:QName" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType mixed="true" name="tLiteral">
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType mixed="true" name="tQuery">
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="part"/>
    <xsd:attribute name="queryLanguage" type="xsd:anyURI"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType mixed="true" name="tExpression">
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="expressionLanguage" type="xsd:anyURI"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType mixed="true" name="tPriority">
    <xsd:complexContent mixed="true">
      <xsd:extension base="tExpression"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType mixed="true" name="tBoolean-expr">
    <xsd:complexContent mixed="true">
      <xsd:extension base="tExpression"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType mixed="true" name="tDuration-expr">
    <xsd:complexContent mixed="true">
      <xsd:extension base="tExpression"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType mixed="true" name="tDeadline-expr">
    <xsd:complexContent mixed="true">
      <xsd:extension base="tExpression"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="tBoolean">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="yes"/>
      <xsd:enumeration value="no"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://localhost:8080/hise/taskOperations/?xsd=xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.

    This schema document describes the XML namespace, in a form
    suitable for import by other schema documents.  

    Note that local names in this namespace are intended to be defined
    only by the World Wide Web Consortium or its subgroups.  The
    following names are currently defined in this namespace and should
    not be used with conflicting semantics by any Working Group,
    specification, or document instance:

    base (as an attribute name): denotes an attribute whose value
         provides a URI to be used as the base for interpreting any
         relative URIs in the scope of the element on which it
         appears; its value is inherited.  This name is reserved
         by virtue of its definition in the XML Base specification.

    id   (as an attribute name): denotes an attribute whose value
         should be interpreted as if declared to be of type ID.
         This name is reserved by virtue of its definition in the
         xml:id specification.

    lang (as an attribute name): denotes an attribute whose value
         is a language code for the natural language of the content of
         any element; its value is inherited.  This name is reserved
         by virtue of its definition in the XML specification.
  
    space (as an attribute name): denotes an attribute whose
         value is a keyword indicating what whitespace processing
         discipline is intended for the content of the element; its
         value is inherited.  This name is reserved by virtue of its
         definition in the XML specification.

    Father (in any context at all): denotes Jon Bosak, the chair of 
         the original XML Working Group.  This name is reserved by 
         the following decision of the W3C XML Plenary and 
         XML Coordination groups:

             In appreciation for his vision, leadership and dedication
             the W3C XML Plenary on this 10th day of February, 2000
             reserves for Jon Bosak in perpetuity the XML name
             xml:Father</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang, xml:space or xml:id
        attributes on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2007/08/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself, or with the XML namespace itself.  In other words, if the XML
   Schema or XML namespaces change, the version of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2007/08/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>Attempting to install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values is probably never
         going to be a realistic possibility.  See
         RFC 3066 at http://www.ietf.org/rfc/rfc3066.txt and the IANA registry
         at http://www.iana.org/assignments/lang-tag-apps.htm for
         further information.

         The union allows for the 'un-declaration' of xml:lang with
         the empty string.</xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xml-id/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://localhost:8080/hise/taskOperations/?xsd=ws-humantask-api.xsd</con:url><con:content><![CDATA[<!--https://www.sdn.sap.com/irj/sdn/go/portal/prtroot/docs/library/uuid/a0c9ce4c-ee02-2a10-4b96-cb205464aa02

© 2007 Active Endpoints Inc., Adobe Systems Inc., BEA Systems Inc., International
Business Machines Corporation, Oracle Inc., and SAP AG. All rights reserved.-->
<xsd:schema blockDefault="#all" elementFormDefault="qualified" targetNamespace="http://www.example.org/WS-HT/api" xmlns="http://www.example.org/WS-HT/api" xmlns:htd="http://www.example.org/WS-HT" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--other namespaces-->
  <!--xsd:import namespace="http://www.w3.org/XML/1998/namespace"
    schemaLocation="http://www.w3.org/2001/xml.xsd" /-->
  <xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://localhost:8080/hise/taskOperations/?xsd=xml.xsd"/>
  <xsd:import namespace="http://www.example.org/WS-HT" schemaLocation="http://localhost:8080/hise/taskOperations/?xsd=ws-humantask.xsd"/>
  <!--data types for attachment operations-->
  <xsd:element name="attachmentInfo" type="tAttachmentInfo"/>
  <xsd:complexType name="tAttachmentInfo">
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="accessType" type="xsd:string"/>
      <xsd:element name="contentType" type="xsd:string"/>
      <xsd:element name="attachedAt" type="xsd:dateTime"/>
      <xsd:element name="attachedBy" type="htd:tUser"/>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="attachment" type="tAttachment"/>
  <xsd:complexType name="tAttachment">
    <xsd:sequence>
      <xsd:element ref="attachmentInfo"/>
      <xsd:element name="value" type="xsd:anyType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--data types for comments-->
  <xsd:element name="comment" type="tComment"/>
  <xsd:complexType name="tComment">
    <xsd:sequence>
      <xsd:element name="addedAt" type="xsd:dateTime"/>
      <xsd:element name="addedBy" type="htd:tUser"/>
      <xsd:element name="text" type="xsd:string"/>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--data types for simple query operations-->
  <xsd:element name="taskAbstract" type="tTaskAbstract"/>
  <xsd:complexType name="tTaskAbstract">
    <xsd:sequence>
      <xsd:element name="id" type="xsd:string"/>
      <xsd:element name="taskType" type="xsd:string"/>
      <xsd:element name="name" type="xsd:QName"/>
      <xsd:element name="status" type="tStatus"/>
      <xsd:element minOccurs="0" name="priority" type="xsd:nonNegativeInteger"/>
      <xsd:element name="createdOn" type="xsd:dateTime"/>
      <xsd:element minOccurs="0" name="activationTime" type="xsd:dateTime"/>
      <xsd:element minOccurs="0" name="expirationTime" type="xsd:dateTime"/>
      <xsd:element minOccurs="0" name="isSkipable" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="hasPotentialOwners" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="startByExists" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="completeByExists" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="presentationName" type="tPresentationName"/>
      <xsd:element minOccurs="0" name="presentationSubject" type="tPresentationSubject"/>
      <xsd:element name="renderingMethodExists" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="hasOutput" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="hasFault" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="hasAttachments" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="hasComments" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="escalated" type="xsd:boolean"/>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="task" type="tTask"/>
  <xsd:complexType name="tTask">
    <xsd:sequence>
      <xsd:element name="id" type="xsd:string"/>
      <xsd:element name="taskType" type="xsd:string"/>
      <xsd:element name="name" type="xsd:QName"/>
      <xsd:element name="status" type="tStatus"/>
      <xsd:element minOccurs="0" name="priority" type="xsd:nonNegativeInteger"/>
      <xsd:element minOccurs="0" name="taskInitiator" type="htd:tUser"/>
      <xsd:element minOccurs="0" name="taskStakeholders" type="htd:tOrganizationalEntity"/>
      <xsd:element minOccurs="0" name="potentialOwners" type="htd:tOrganizationalEntity"/>
      <xsd:element minOccurs="0" name="businessAdministrators" type="htd:tOrganizationalEntity"/>
      <xsd:element minOccurs="0" name="actualOwner" type="htd:tUser"/>
      <xsd:element minOccurs="0" name="notificationRecipients" type="htd:tOrganizationalEntity"/>
      <xsd:element name="createdOn" type="xsd:dateTime"/>
      <xsd:element minOccurs="0" name="createdBy" type="xsd:string"/>
      <xsd:element minOccurs="0" name="activationTime" type="xsd:dateTime"/>
      <xsd:element minOccurs="0" name="expirationTime" type="xsd:dateTime"/>
      <xsd:element minOccurs="0" name="isSkipable" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="hasPotentialOwners" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="startByExists" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="completeByExists" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="presentationName" type="tPresentationName"/>
      <xsd:element minOccurs="0" name="presentationSubject" type="tPresentationSubject"/>
      <xsd:element name="renderingMethodExists" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="hasOutput" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="hasFault" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="hasAttachments" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="hasComments" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="escalated" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="primarySearchBy" type="xsd:string"/>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="tPresentationName">
    <xsd:annotation>
      <xsd:documentation>length-restricted string</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
      <xsd:whiteSpace value="preserve"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="tPresentationSubject">
    <xsd:annotation>
      <xsd:documentation>length-restricted string</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="254"/>
      <xsd:whiteSpace value="preserve"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="tStatus">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CREATED"/>
      <xsd:enumeration value="READY"/>
      <xsd:enumeration value="RESERVED"/>
      <xsd:enumeration value="IN_PROGRESS"/>
      <xsd:enumeration value="SUSPENDED"/>
      <xsd:enumeration value="COMPLETED"/>
      <xsd:enumeration value="FAILED"/>
      <xsd:enumeration value="ERROR"/>
      <xsd:enumeration value="EXITED"/>
      <xsd:enumeration value="OBSOLETE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--data types for advanced query operations-->
  <xsd:element name="taskQueryResultSet" type="tTaskQueryResultSet"/>
  <xsd:complexType name="tTaskQueryResultSet">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="row" type="tTaskQueryResultRow"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="tTaskQueryResultRow">
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element name="id" type="xsd:string"/>
      <xsd:element name="taskType" type="xsd:string"/>
      <xsd:element name="name" type="xsd:QName"/>
      <xsd:element name="status" type="tStatus"/>
      <xsd:element name="priority" type="xsd:nonNegativeInteger"/>
      <xsd:element name="taskInitiator" type="htd:tOrganizationalEntity"/>
      <xsd:element name="taskStakeholders" type="htd:tOrganizationalEntity"/>
      <xsd:element name="potentialOwners" type="htd:tOrganizationalEntity"/>
      <xsd:element name="businessAdministrators" type="htd:tOrganizationalEntity"/>
      <xsd:element name="actualOwner" type="htd:tUser"/>
      <xsd:element name="notificationRecipients" type="htd:tOrganizationalEntity"/>
      <xsd:element name="createdOn" type="xsd:dateTime"/>
      <xsd:element name="createdBy" type="xsd:string"/>
      <xsd:element name="activationTime" type="xsd:dateTime"/>
      <xsd:element name="expirationTime" type="xsd:dateTime"/>
      <xsd:element name="isSkipable" type="xsd:boolean"/>
      <xsd:element name="hasPotentialOwners" type="xsd:boolean"/>
      <xsd:element name="startByExists" type="xsd:boolean"/>
      <xsd:element name="completeByExists" type="xsd:boolean"/>
      <xsd:element name="presentationName" type="tPresentationName"/>
      <xsd:element name="presentationSubject" type="tPresentationSubject"/>
      <xsd:element name="presentationDescription" type="xsd:string"/>
      <xsd:element name="renderingMethodExists" type="xsd:boolean"/>
      <xsd:element name="hasOutput" type="xsd:boolean"/>
      <xsd:element name="hasFault" type="xsd:boolean"/>
      <xsd:element name="hasAttachments" type="xsd:boolean"/>
      <xsd:element name="hasComments" type="xsd:boolean"/>
      <xsd:element name="escalated" type="xsd:boolean"/>
      <xsd:element name="primarySearchBy" type="xsd:string"/>
      <xsd:any namespace="##other" processContents="lax"/>
    </xsd:choice>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://localhost:8080/hise/taskOperations/?xsd=ws-humantask-api-wsdl.xsd</con:url><con:content><![CDATA[<!--https://www.sdn.sap.com/irj/sdn/go/portal/prtroot/docs/library/uuid/a0c9ce4c-ee02-2a10-4b96-cb205464aa02

© 2007 Active Endpoints Inc., Adobe Systems Inc., BEA Systems Inc., International
Business Machines Corporation, Oracle Inc., and SAP AG. All rights reserved.-->
<xsd:schema blockDefault="#all" elementFormDefault="qualified" targetNamespace="http://www.example.org/WS-HT/api/xsd" xmlns="http://www.example.org/WS-HT/api/xsd" xmlns:api="http://www.example.org/WS-HT/api" xmlns:htd="http://www.example.org/WS-HT" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import namespace="http://www.example.org/WS-HT/api" schemaLocation="http://localhost:8080/hise/taskOperations/?xsd=ws-humantask-api.xsd"/>
  <xsd:import namespace="http://www.example.org/WS-HT" schemaLocation="http://localhost:8080/hise/taskOperations/?xsd=ws-humantask.xsd"/>
  <xsd:element name="claim">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="claimResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="start">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="startResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="stop">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="stopResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="release">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="releaseResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="suspend">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="suspendResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="suspendUntil">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
        <xsd:element name="time" type="tTime"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="tTime">
    <xsd:choice>
      <xsd:element name="timePeriod" type="xsd:duration"/>
      <xsd:element name="pointOfTime" type="xsd:dateTime"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:element name="suspendUntilResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="resume">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="resumeResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="complete">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
        <xsd:element minOccurs="0" name="taskData" type="xsd:anyType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="completeResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="remove">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="removeResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="fail">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
        <xsd:element minOccurs="0" name="faultName" type="xsd:NCName"/>
        <xsd:element minOccurs="0" name="faultData" type="xsd:anyType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="failResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="setPriority">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
        <xsd:element name="priority" type="xsd:nonNegativeInteger"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="setPriorityResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="addAttachment">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
        <xsd:element name="name" type="xsd:string"/>
        <xsd:element name="accessType" type="xsd:string"/>
        <xsd:element name="attachment" type="xsd:anyType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="addAttachmentResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAttachmentInfos">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAttachmentInfosResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="0" name="info" type="api:tAttachmentInfo"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAttachments">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
        <xsd:element name="attachmentName" type="xsd:string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAttachmentsResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="0" name="attachment" type="api:tAttachment"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="deleteAttachments">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
        <xsd:element name="attachmentName" type="xsd:string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="deleteAttachmentsResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="addComment">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
        <xsd:element name="text" type="xsd:string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="addCommentResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getComments">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getCommentsResposne">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="0" name="comment" type="api:tComment"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="skip">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="skipResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="forward">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
        <xsd:element name="organizationalEntity" type="htd:tOrganizationalEntity"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="forwardResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="delegate">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
        <xsd:element name="organizationalEntity" type="htd:tOrganizationalEntity"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="delegateResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getRendering">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyType"/>
        <xsd:element name="renderingType" type="xsd:QName"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getRenderingResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="rendering" type="xsd:anyType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getRenderingTypes">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getRenderingTypesResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="0" name="renderingType" type="xsd:QName"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getTaskInfo">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getTaskInfoResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="task" type="api:tTask"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getTaskDescription">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
        <xsd:element minOccurs="0" name="contentType" type="xsd:string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getTaskDescriptionResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="description" type="xsd:string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="setOutput">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
        <xsd:element minOccurs="0" name="part" type="xsd:NCName"/>
        <xsd:element name="taskData" type="xsd:anyType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="setOutputResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="deleteOutput">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="deleteOutputResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="setFault">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
        <xsd:element name="faultName" type="xsd:NCName"/>
        <xsd:element name="faultData" type="xsd:anyType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="setFaultResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="deleteFault">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="deleteFaultResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getInput">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
        <xsd:element minOccurs="0" name="part" type="xsd:NCName"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getInputResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="taskData" type="xsd:anyType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getOutput">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
        <xsd:element minOccurs="0" name="part" type="xsd:NCName"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getOutputResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="taskData" type="xsd:anyType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getFault">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
        <xsd:element name="faultName" type="xsd:NCName"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getFaultResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="faultName" type="xsd:NCName"/>
        <xsd:element name="faultData" type="xsd:anyType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getMyTaskAbstracts">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="taskType" type="xsd:string"/>
        <xsd:element minOccurs="0" name="genericHumanRole" type="xsd:string"/>
        <xsd:element minOccurs="0" name="workQueue" type="xsd:string"/>
        <xsd:element maxOccurs="unbounded" minOccurs="0" name="status" type="api:tStatus"/>
        <xsd:element minOccurs="0" name="whereClause" type="xsd:string"/>
        <xsd:element minOccurs="0" name="createdOnClause" type="xsd:string"/>
        <xsd:element minOccurs="0" name="maxTasks" type="xsd:int"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getMyTaskAbstractsResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="0" name="taskAbstract" type="api:tTaskAbstract"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getMyTasks">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="taskType" type="xsd:string"/>
        <xsd:element minOccurs="0" name="genericHumanRole" type="xsd:string"/>
        <xsd:element minOccurs="0" name="workQueue" type="xsd:string"/>
        <xsd:element maxOccurs="unbounded" minOccurs="0" name="status" type="api:tStatus"/>
        <xsd:element minOccurs="0" name="whereClause" type="xsd:string"/>
        <xsd:element minOccurs="0" name="createdOnClause" type="xsd:string"/>
        <xsd:element minOccurs="0" name="maxTasks" type="xsd:int"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getMyTasksResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="0" name="taskAbstract" type="api:tTask"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="query">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="selectClause" type="xsd:string"/>
        <xsd:element minOccurs="0" name="whereClause" type="xsd:string"/>
        <xsd:element minOccurs="0" name="orderByClause" type="xsd:string"/>
        <xsd:element minOccurs="0" name="maxTasks" type="xsd:int"/>
        <xsd:element minOccurs="0" name="taskIndexOffset" type="xsd:int"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="queryResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="query" type="api:tTaskQueryResultSet"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="activate">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="activateResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="nominate">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
        <xsd:element name="organizationalEntity" type="htd:tOrganizationalEntity"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="nominateResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="setGenericHumanRole">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="identifier" type="xsd:anyURI"/>
        <xsd:element name="genericHumanRole" type="xsd:string"/>
        <xsd:element name="organizationalEntity" type="htd:tOrganizationalEntity"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="setGenericHumanRoleResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>Empty message</xsd:documentation>
        </xsd:annotation>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="illegalState">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="status" type="api:tStatus"/>
        <xsd:element name="message" type="xsd:string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="illegalArgument" type="xsd:string"/>
  <xsd:element name="illegalAccess" type="xsd:string"/>
  <xsd:element name="illegalOperation" type="xsd:string"/>
  <xsd:element name="recipientNotAllowed" type="xsd:string"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/activate" name="activate" bindingOperationName="activate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:activate>
         <xsd:identifier>?</xsd:identifier>
      </xsd:activate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/activate"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/addAttachment" name="addAttachment" bindingOperationName="addAttachment" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:addAttachment>
         <xsd:identifier>?</xsd:identifier>
         <xsd:name>?</xsd:name>
         <xsd:accessType>?</xsd:accessType>
         <xsd:attachment>?</xsd:attachment>
      </xsd:addAttachment>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/addAttachment"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/addComment" name="addComment" bindingOperationName="addComment" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:addComment>
         <xsd:identifier>?</xsd:identifier>
         <xsd:text>?</xsd:text>
      </xsd:addComment>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/addComment"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/claim" name="claim" bindingOperationName="claim" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:claim>
         <xsd:identifier>?</xsd:identifier>
      </xsd:claim>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/claim"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/complete" name="complete" bindingOperationName="complete" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:complete>
         <xsd:identifier>?</xsd:identifier>
         <!--Optional:-->
         <xsd:taskData>?</xsd:taskData>
      </xsd:complete>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/complete"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/delegate" name="delegate" bindingOperationName="delegate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd" xmlns:ws="http://www.example.org/WS-HT">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:delegate>
         <xsd:identifier>?</xsd:identifier>
         <xsd:organizationalEntity>
            <!--You have a CHOICE of the next 2 items at this level-->
            <ws:users>
               <!--Zero or more repetitions:-->
               <ws:user>?</ws:user>
            </ws:users>
            <ws:groups>
               <!--Zero or more repetitions:-->
               <ws:group>?</ws:group>
            </ws:groups>
         </xsd:organizationalEntity>
      </xsd:delegate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/delegate"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/deleteAttachments" name="deleteAttachments" bindingOperationName="deleteAttachments" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:deleteAttachments>
         <xsd:identifier>?</xsd:identifier>
         <xsd:attachmentName>?</xsd:attachmentName>
      </xsd:deleteAttachments>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/deleteAttachments"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/deleteFault" name="deleteFault" bindingOperationName="deleteFault" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:deleteFault>
         <xsd:identifier>?</xsd:identifier>
      </xsd:deleteFault>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/deleteFault"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/deleteOutput" name="deleteOutput" bindingOperationName="deleteOutput" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:deleteOutput>
         <xsd:identifier>?</xsd:identifier>
      </xsd:deleteOutput>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/deleteOutput"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/fail" name="fail" bindingOperationName="fail" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:fail>
         <xsd:identifier>?</xsd:identifier>
         <!--Optional:-->
         <xsd:faultName>?</xsd:faultName>
         <!--Optional:-->
         <xsd:faultData>?</xsd:faultData>
      </xsd:fail>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/fail"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/forward" name="forward" bindingOperationName="forward" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd" xmlns:ws="http://www.example.org/WS-HT">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:forward>
         <xsd:identifier>?</xsd:identifier>
         <xsd:organizationalEntity>
            <!--You have a CHOICE of the next 2 items at this level-->
            <ws:users>
               <!--Zero or more repetitions:-->
               <ws:user>?</ws:user>
            </ws:users>
            <ws:groups>
               <!--Zero or more repetitions:-->
               <ws:group>?</ws:group>
            </ws:groups>
         </xsd:organizationalEntity>
      </xsd:forward>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/forward"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/getAttachmentInfos" name="getAttachmentInfos" bindingOperationName="getAttachmentInfos" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:getAttachmentInfos>
         <xsd:identifier>?</xsd:identifier>
      </xsd:getAttachmentInfos>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/getAttachmentInfos"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/getAttachments" name="getAttachments" bindingOperationName="getAttachments" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:getAttachments>
         <xsd:identifier>?</xsd:identifier>
         <xsd:attachmentName>?</xsd:attachmentName>
      </xsd:getAttachments>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/getAttachments"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/getComments" name="getComments" bindingOperationName="getComments" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:getComments>
         <xsd:identifier>?</xsd:identifier>
      </xsd:getComments>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/getComments"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/getFault" name="getFault" bindingOperationName="getFault" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:getFault>
         <xsd:identifier>?</xsd:identifier>
         <xsd:faultName>?</xsd:faultName>
      </xsd:getFault>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/getFault"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/getInput" name="getInput" bindingOperationName="getInput" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:getInput>
         <xsd:identifier>?</xsd:identifier>
         <!--Optional:-->
         <xsd:part>?</xsd:part>
      </xsd:getInput>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/getInput"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/getMyTaskAbstracts" name="getMyTaskAbstracts" bindingOperationName="getMyTaskAbstracts" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:getMyTaskAbstracts>
         <xsd:taskType>?</xsd:taskType>
         <!--Optional:-->
         <xsd:genericHumanRole>?</xsd:genericHumanRole>
         <!--Optional:-->
         <xsd:workQueue>?</xsd:workQueue>
         <!--Zero or more repetitions:-->
         <xsd:status>?</xsd:status>
         <!--Optional:-->
         <xsd:whereClause>?</xsd:whereClause>
         <!--Optional:-->
         <xsd:createdOnClause>?</xsd:createdOnClause>
         <!--Optional:-->
         <xsd:maxTasks>?</xsd:maxTasks>
      </xsd:getMyTaskAbstracts>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/getMyTaskAbstracts"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/getMyTasks" name="getMyTasks" bindingOperationName="getMyTasks" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" wssPasswordType="PasswordDigest"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:getMyTasks>
         <xsd:taskType>ALL</xsd:taskType>
         <xsd:genericHumanRole>POTENTIALOWNERS</xsd:genericHumanRole>
         <xsd:maxTasks>10</xsd:maxTasks>
      </xsd:getMyTasks>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>user1</con:username><con:password>pass1</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/getMyTasks"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/getOutput" name="getOutput" bindingOperationName="getOutput" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:getOutput>
         <xsd:identifier>?</xsd:identifier>
         <!--Optional:-->
         <xsd:part>?</xsd:part>
      </xsd:getOutput>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/getOutput"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/getRendering" name="getRendering" bindingOperationName="getRendering" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:getRendering>
         <xsd:identifier>?</xsd:identifier>
         <xsd:renderingType>?</xsd:renderingType>
      </xsd:getRendering>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/getRendering"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/getRenderingTypes" name="getRenderingTypes" bindingOperationName="getRenderingTypes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:getRenderingTypes>
         <xsd:identifier>?</xsd:identifier>
      </xsd:getRenderingTypes>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/getRenderingTypes"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/getTaskDescription" name="getTaskDescription" bindingOperationName="getTaskDescription" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:getTaskDescription>
         <xsd:identifier>?</xsd:identifier>
         <!--Optional:-->
         <xsd:contentType>?</xsd:contentType>
      </xsd:getTaskDescription>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/getTaskDescription"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/getTaskInfo" name="getTaskInfo" bindingOperationName="getTaskInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:getTaskInfo>
         <xsd:identifier>?</xsd:identifier>
      </xsd:getTaskInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/getTaskInfo"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/nominate" name="nominate" bindingOperationName="nominate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd" xmlns:ws="http://www.example.org/WS-HT">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:nominate>
         <xsd:identifier>?</xsd:identifier>
         <xsd:organizationalEntity>
            <!--You have a CHOICE of the next 2 items at this level-->
            <ws:users>
               <!--Zero or more repetitions:-->
               <ws:user>?</ws:user>
            </ws:users>
            <ws:groups>
               <!--Zero or more repetitions:-->
               <ws:group>?</ws:group>
            </ws:groups>
         </xsd:organizationalEntity>
      </xsd:nominate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/nominate"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/query" name="query" bindingOperationName="query" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:query>
         <xsd:selectClause>?</xsd:selectClause>
         <!--Optional:-->
         <xsd:whereClause>?</xsd:whereClause>
         <!--Optional:-->
         <xsd:orderByClause>?</xsd:orderByClause>
         <!--Optional:-->
         <xsd:maxTasks>?</xsd:maxTasks>
         <!--Optional:-->
         <xsd:taskIndexOffset>?</xsd:taskIndexOffset>
      </xsd:query>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/query"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/release" name="release" bindingOperationName="release" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:release>
         <xsd:identifier>?</xsd:identifier>
      </xsd:release>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/release"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/remove" name="remove" bindingOperationName="remove" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:remove>
         <xsd:identifier>?</xsd:identifier>
      </xsd:remove>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/remove"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/resume" name="resume" bindingOperationName="resume" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:resume>
         <xsd:identifier>?</xsd:identifier>
      </xsd:resume>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/resume"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/setFault" name="setFault" bindingOperationName="setFault" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:setFault>
         <xsd:identifier>?</xsd:identifier>
         <xsd:faultName>?</xsd:faultName>
         <xsd:faultData>?</xsd:faultData>
      </xsd:setFault>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/setFault"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/setGenericHumanRole" name="setGenericHumanRole" bindingOperationName="setGenericHumanRole" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd" xmlns:ws="http://www.example.org/WS-HT">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:setGenericHumanRole>
         <xsd:identifier>?</xsd:identifier>
         <xsd:genericHumanRole>?</xsd:genericHumanRole>
         <xsd:organizationalEntity>
            <!--You have a CHOICE of the next 2 items at this level-->
            <ws:users>
               <!--Zero or more repetitions:-->
               <ws:user>?</ws:user>
            </ws:users>
            <ws:groups>
               <!--Zero or more repetitions:-->
               <ws:group>?</ws:group>
            </ws:groups>
         </xsd:organizationalEntity>
      </xsd:setGenericHumanRole>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/setGenericHumanRole"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/setOutput" name="setOutput" bindingOperationName="setOutput" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:setOutput>
         <xsd:identifier>?</xsd:identifier>
         <!--Optional:-->
         <xsd:part>?</xsd:part>
         <xsd:taskData>?</xsd:taskData>
      </xsd:setOutput>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/setOutput"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/setPriority" name="setPriority" bindingOperationName="setPriority" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:setPriority>
         <xsd:identifier>?</xsd:identifier>
         <xsd:priority>?</xsd:priority>
      </xsd:setPriority>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/setPriority"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/skip" name="skip" bindingOperationName="skip" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:skip>
         <xsd:identifier>?</xsd:identifier>
      </xsd:skip>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/skip"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/start" name="start" bindingOperationName="start" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:start>
         <xsd:identifier>?</xsd:identifier>
      </xsd:start>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/start"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/stop" name="stop" bindingOperationName="stop" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:stop>
         <xsd:identifier>?</xsd:identifier>
      </xsd:stop>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/stop"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/suspend" name="suspend" bindingOperationName="suspend" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:suspend>
         <xsd:identifier>?</xsd:identifier>
      </xsd:suspend>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/suspend"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.example.org/WS-HT/api/wsdl/suspendUntil" name="suspendUntil" bindingOperationName="suspendUntil" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:suspendUntil>
         <xsd:identifier>?</xsd:identifier>
         <xsd:time>
            <!--You have a CHOICE of the next 2 items at this level-->
            <xsd:timePeriod>?</xsd:timePeriod>
            <xsd:pointOfTime>?</xsd:pointOfTime>
         </xsd:time>
      </xsd:suspendUntil>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/suspendUntil"/></con:call></con:operation></con:interface><con:testSuite name="ClaimHandling"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:settings/><con:testStep type="request" name="approve - Request 1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ClaimsHandlingBinding</con:interface><con:operation>approve</con:operation><con:request name="approve - Request 1" outgoingWss="" incomingWss="" timeout="" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/ClaimsHandlingService/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cla="http://www.insurance.example.com/claims">
   <soapenv:Header/>
   <soapenv:Body>
      <cla:approve>
         <ClaimApprovalRequest>
            <cla:cust>
               <cla:id>123</cla:id>
               <cla:firstname>John</cla:firstname>
               <cla:lastname>Rambo</cla:lastname>
            </cla:cust>
            <cla:amount>123</cla:amount>
            <cla:region>US</cla:region>
            <cla:prio>1</cla:prio>
            <cla:activateAt></cla:activateAt>
         </ClaimApprovalRequest>
      </cla:approve>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:credentials><con:username>user1</con:username><con:password>pass1</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.insurance.example.com/claims/ClaimsHandlingPT/approveRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getMyTasks - Request 1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>taskOperationsSOAP</con:interface><con:operation>getMyTasks</con:operation><con:request name="getMyTasks - Request 1" outgoingWss="" incomingWss="" timeout="" wssPasswordType="PasswordDigest"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:getMyTasks>
         <xsd:taskType>ALL</xsd:taskType>
         <xsd:genericHumanRole>POTENTIALOWNERS</xsd:genericHumanRole>
         <xsd:maxTasks>10</xsd:maxTasks>
      </xsd:getMyTasks>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:credentials><con:username>user1</con:username><con:password>pass1</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/getMyTasks"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="start - Request 1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>taskOperationsSOAP</con:interface><con:operation>start</con:operation><con:request name="start - Request 1" outgoingWss="" incomingWss="" timeout="" wssPasswordType="PasswordDigest"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:start>
         <xsd:identifier>1</xsd:identifier>
      </xsd:start>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:credentials><con:username>user1</con:username><con:password>pass1</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/start"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="complete - Request 1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>taskOperationsSOAP</con:interface><con:operation>complete</con:operation><con:request name="complete - Request 1" outgoingWss="" incomingWss="" timeout="" wssPasswordType="PasswordDigest"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/hise/taskOperations/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.example.org/WS-HT/api/xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <xsd:complete>
         <xsd:identifier>1</xsd:identifier>
      </xsd:complete>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:credentials><con:username>user1</con:username><con:password>pass1</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/WS-HT/api/wsdl/complete"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:mockService port="9999" path="/" host="joker-laptop" name="Resolving" bindToHostOnly="false" docroot=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:mockOperation name="resolve" interface="ClaimsHandlingBinding" operation="resolve"><con:settings/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name="Response 1" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cla="http://www.insurance.example.com/claims">
   <soapenv:Header/>
   <soapenv:Body>
      <cla:resolveResponse/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.insurance.example.com/claims/ClaimsHandlingPT/resolveResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:properties/></con:mockService><con:properties/><con:wssContainer/></con:soapui-project>